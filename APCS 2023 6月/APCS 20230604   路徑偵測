
解題思路(1)
暴力解決十六種算法，在動的同時同時要記住轉換面對的方向
請注意，有些動了也不會換方向





#include <iostream>
using namespace std;

int main() {
    int n;
    cin >> n;
    int x[n], y[n];

    for (int i = 0; i < n; i++) {
        cin >> x[i] >> y[i];
    }

    int left = 0, right = 0, turn = 0;

    int way = 4; // 1 北 2 南 3 西 4 東

    for (int i = 0; i < n - 1; i++) {
        int ex_x = x[i + 1] - x[i];
        int ex_y = y[i + 1] - y[i];
        if (way == 1) {
            if (ex_x > 0) { // 北
                left = left + 1;
                way = 3;
            }
            else if (ex_x < 0) {
                right = right + 1;
                way = 4;
            }
            else if (ex_y < 0) {
                turn = turn + 1;
                way = 2;
            }
        } else if (way == 2) { // 南
            if (ex_x > 0) {
                right = right + 1;
                way = 4;
            }
            else if (ex_x < 0) {
                left = left + 1;
                way = 3;
            }
            else if (ex_y > 0) {
                turn = turn + 1;
                way = 1;
            }
        } else if (way == 3) { // 西
            if (ex_y > 0) {
                right = right + 1;
                way = 1;
            }
            else if (ex_y < 0) {
                left = left + 1;
                way = 2;
            }
            else if (ex_x > 0) {
                turn = turn + 1;
                way = 4;
            }
        } else if (way == 4) { // 東
            if (ex_y > 0) {
                left = left + 1;
                way = 1;
            }
            else if (ex_y < 0) {
                right = right + 1;
                way = 2;
            }
            else if (ex_x < 0) {
                turn = turn + 1;
                way = 3;
            }
        }
    }

    // 輸出結果
    cout << left << " " << right << " " << turn;

    return 0;
}
